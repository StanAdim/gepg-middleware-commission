<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration {
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('bills', function (Blueprint $table) {
            $table->id();

            // Start of GEPG Columns
            $table->string('req_id', 100)
                ->unique()
                ->comment('[ReqId] Service Provider Unique Bill Request Identification number');
            $table->string('sp_code', 10)
                ->comment('[SpCode] Service Provider Code');
            $table->text('bill_desc')->nullable()
                ->comment('[BillDesc] Bill Description');
            $table->string('cust_tin', 50)
                ->comment('[CustTin] Customer Tax Identification Number (TIN)');
            $table->string('cust_id', 50)
                ->comment('[CustId] Customer Reference');
            $table->string('cust_id_typ')
                ->comment('[CustIdTyp] Customer Identification Reference Type');
            $table->string('cust_accnt', 50)
                ->nullable()
                ->comment('[CustAccnt] Customer Account Number');
            $table->string('cust_name', 200)
                ->comment('[CustName] Customer Name');
            $table->string('cust_cell_num', 12)->nullable()
                ->comment('[CustCellNum] Customer Mobile/Cell Number should have twelve digits including country code e.g. 255XXXXXXXXX');
            $table->string('cust_email', 30)->nullable()
                ->comment('[CustEmail] Customer Email Address');
            $table->dateTime('expires_on');
            $table->string('bill_gen_by', 30)->nullable()
                ->comment('[BillGenBy] Bill Generated By');
            $table->string('bill_appr_by', 30)->nullable()
                ->comment('[BillApprBy] Bill Approved By');
            $table->decimal('bill_amt', 32, 2)
                ->comment('[BillAmt] Billed Amount can be decimal with precision of two');
            $table->decimal('bill_eqv_amt', 32, 2)
                ->comment('[BillEqvAmt] Equivalent Billed Amount should be equal to the summation of all item equivalent amounts. Always submitted as TZS.');
            $table->string('ccy', 3)
                ->comment('[Ccy] Currency Code - Billed Amount Currency must be standard currency code');
            $table->string('bill_cntr_num', 50)
                ->nullable()
                ->comment('[BillCntrNum] Bill Control Number');
            $table->string('cust_cntr_num', 20)
                ->nullable()
                ->comment('[CustCntrNum] Customer Control Number');
            $table->string('bill_sts_code', 100)
                ->nullable()
                ->comment('[BillStsCode] Bill Status Code');
            $table->string('bill_sts_desc', 500)
                ->nullable()
                ->comment('[BillStsDesc] Bill Status Description');
            $table->string('cancl_reasn', 255)
                ->nullable()
                ->comment('[CanclReasn] Bill Cancellation reason');
            $table->string('cancl_gen_by', 30)
                ->nullable()
                ->comment('[CanclGenBy] Individual initiated bill cancellation from SP system');
            $table->string('cancl_appr_by', 30)
                ->nullable()
                ->comment('[CanclApprBy] Individual initiated bill approved cancellation from SP system');
            $table->string('cancl_sts', 2)
                ->nullable()
                ->comment('[CanclSts] Bill Cancellation General Status: GF – GePG Failure, GS – GePG Success');
            $table->string('cancl_sts_code', 100)
                ->nullable()
                ->comment('[CanclStsCode] Bill Cancellation Status Code');
            $table->string('cancl_sts_desc', 500)
                ->nullable()
                ->comment('[CanclStsDesc] Bill Cancellation Status Description');
            // End of GEPG Columns

            $table->string('state', 50);
            $table->mediumText('external_callback_url');

            $table->longText('raw_gepg_response')->nullable();

            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('bills');
    }
};
